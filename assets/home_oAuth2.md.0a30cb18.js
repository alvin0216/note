import{_ as s,o as n,c as a,N as l}from"./chunks/framework.208f6f3f.js";const i=JSON.parse('{"title":"oAuth2","description":"","frontmatter":{"title":"oAuth2","date":"2020-07-03T11:05:20.000Z","sidebar":"auto","tags":["oAuth2"],"categories":["技术漫谈"]},"headers":[],"relativePath":"home/oAuth2.md","lastUpdated":1682518848000}'),p={name:"home/oAuth2.md"},o=l(`<h2 id="oauth-是什么" tabindex="-1">oAuth 是什么 <a class="header-anchor" href="#oauth-是什么" aria-label="Permalink to &quot;oAuth 是什么&quot;">​</a></h2><blockquote><p>oAuth 目前最流行的授权机制，用来<strong>授权第三方应用</strong>，获取用户数据。</p></blockquote><p>简单说，OAuth 就是一种授权机制，主要给第三方应用颁发一个有<strong>时效性的令牌 access_token</strong>，第三方应用根据这个 <code>access_token</code> 就可以去获取用户的相关资源，如头像，昵称，email 这些信息。</p><p>常见的应用：QQ 登录、微信登录、github 授权登录等等。</p><h2 id="协议流程" tabindex="-1">协议流程 <a class="header-anchor" href="#协议流程" aria-label="Permalink to &quot;协议流程&quot;">​</a></h2><p>在详细介绍 oAuth2 协议流程之前，先来简单了解几个角色，方便后续的理解。</p><ul><li><code>Resource Owner</code>: 资源所有者，因为是请求用户的头像和昵称的一些信息，所以资源的所有者一般指用户自己。</li><li><code>Client</code>: 客户端，如 web 网站，app 等</li><li><code>Resource Server</code>: 资源服务器，托管受保护资源的服务器</li><li><code>Authorization Server</code>: 授权服务器，一般和资源服务器是同一家公司的应用，主要是用来处理授权，给客户端颁发令牌</li><li><code>User-agent</code>: 用户代理，一般为 web 浏览器，在手机上就是 app</li></ul><p><img src="https://alvin-cdn.oss-cn-shenzhen.aliyuncs.com/images/oAuth2.png" alt=""></p><ol><li>用户打开客户端(Client)，客户端向授权服务器(Resource Owner)发送一个授权请求</li><li>用户同意给客户端(Client)授权</li><li>客户端使用刚才的授权去向认证服务器(Authorization Server)认证</li><li>认证服务器认证通过后，会给客户端发放令牌(Access Token)</li><li>客户端拿着令牌(Access Token)，去向资源服务器(Resource Server)申请获取资源</li><li>资源服务器确认令牌之后，给客户端返回受保护的资源(Protected Resource)</li></ol><hr><h2 id="授权方式" tabindex="-1">授权方式 <a class="header-anchor" href="#授权方式" aria-label="Permalink to &quot;授权方式&quot;">​</a></h2><p>OAuth 2.0 对于如何颁发令牌的细节，规定得非常详细。具体来说，一共分成四种授权类型（authorization grant），即四种颁发令牌的方式，适用于不同的互联网场景。</p><ul><li><code>授权码模式(authorization code)</code>： 最常用的流程，安全性也最高，它适用于那些有后端的 Web 应用。授权码通过前端传送，令牌则是储存在后端，而且所有与资源服务器的通信都在后端完成。这样的前后端分离，可以避免令牌泄漏。</li><li><code>隐藏式(implicit)</code>：允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤。适用于<strong>纯前端</strong>，无后端的的 web。</li><li><code>密码模式(resource owner password credentials)</code>：这种方式需要用户给出自己的用户名/密码，显然风险很大，因此只适用于其他授权方式都无法采用的情况，而且必须是用户高度信任的应用。</li><li><code>凭证式（client credentials）</code>：适用于没有前端的命令行应用，即在命令行下请求令牌。</li></ul><h3 id="授权码模式-authorization-code-✨" tabindex="-1">授权码模式(authorization code) ✨ <a class="header-anchor" href="#授权码模式-authorization-code-✨" aria-label="Permalink to &quot;授权码模式(authorization code) ✨&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+----------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Resource </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">   Owner  </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+----------+</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">^</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">     (B)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+----|-----+</span><span style="color:#A6ACCD;">          Client Identifier      </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-+----</span><span style="color:#A6ACCD;">(A)</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Redirection URI </span><span style="color:#89DDFF;">----&gt;|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  User</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Authorization </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  Agent  </span><span style="color:#89DDFF;">-+----</span><span style="color:#A6ACCD;">(B)</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> User authenticates </span><span style="color:#89DDFF;">---&gt;|</span><span style="color:#A6ACCD;">     Server    </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                 </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-+----</span><span style="color:#A6ACCD;">(C)</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> Authorization Code </span><span style="color:#89DDFF;">---&lt;|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+-|----|---+</span><span style="color:#A6ACCD;">                                 </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                         </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;">      v</span></span>
<span class="line"><span style="color:#A6ACCD;">  (A)  (C)                                        </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;">    v                                         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+---------+</span><span style="color:#A6ACCD;">                                      </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|&gt;---</span><span style="color:#A6ACCD;">(D)</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> Authorization Code </span><span style="color:#89DDFF;">---------</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">      |</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  Client </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Redirection URI                  </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                             </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|&lt;---</span><span style="color:#A6ACCD;">(E)</span><span style="color:#89DDFF;">-----</span><span style="color:#A6ACCD;"> Access Token </span><span style="color:#89DDFF;">-------------------</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C3E88D;"> +---------+       (w/ Optional Refresh Token)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>以 <code>github</code> 登录为例：</p><p><img src="https://alvin-cdn.oss-cn-shenzhen.aliyuncs.com/images/github-login.png" alt=""></p><p>(A). 用户在网站上使用 github 登录，首先会重定向到 github 的授权端点：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">https://github.com/login/oauth/authorize?</span></span>
<span class="line"><span style="color:#A6ACCD;">response_type</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">client_id</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">your_code</span><span style="color:#89DDFF;">&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">redirect_uri</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">重定向的url</span><span style="color:#89DDFF;">&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">scope</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">read</span><span style="color:#89DDFF;">&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">state</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">uuid</span></span>
<span class="line"></span></code></pre></div><table><thead><tr><th>字段</th><th>描述</th></tr></thead><tbody><tr><td>response_type</td><td>必须，在授权码模式中固定为 code</td></tr><tr><td>client_id</td><td>必须，唯一标识了客户端，在 github 注册时获得的客户端 ID</td></tr><tr><td>redirect_url</td><td>客户端在 github 注册的重定向 url，用户同意或拒绝的时候都会跳转到这个重定向 url</td></tr><tr><td>scope</td><td>可选，请求资源范围，如有多项，使用多个空格隔开</td></tr><tr><td>state</td><td>推荐，客户端生成的随机数，资源服务器会原样返回，防止 CSRF 的攻击</td></tr></tbody></table><p>(B). 页面跳转后，github 会要求用户登录，然后询问是否给予客户端授权，用户点击同意。</p><p>(C). 然后 github 就会将授权码(Authorization Code)返回给 redirect_uri(重定向 uri)。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">redirect_uri?code=xxxxxxx</span></span>
<span class="line"></span></code></pre></div><table><thead><tr><th>字段</th><th>描述</th></tr></thead><tbody><tr><td>code</td><td>必须，授权码</td></tr><tr><td>state</td><td>防止 CSRF 攻击的参数</td></tr></tbody></table><p>(D). 客户端(Client)在通过在 URL 中取出授权码之后，就可以在后端向 github 请求令牌</p><table><thead><tr><th>字段</th><th>描述</th></tr></thead><tbody><tr><td>client_id</td><td>必须，客户端在 github 注册的唯一标识</td></tr><tr><td>client_secret</td><td>必须，客户端在 github 注册时返回的密钥</td></tr><tr><td>grant_type</td><td>必须，authorization_code/refresh_code</td></tr><tr><td>code</td><td>必须，上一步中取出的授权码</td></tr><tr><td>redirect_uri</td><td>必须，完成授权之后的回调地址，与在 github 注册时的一致</td></tr></tbody></table><p>(E). github 给 redirect_uri 指定的地址返回 AccessToken，通过 JSON 格式返回</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">access_token</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xxxxxxx</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">token_type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bearer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">expires_in</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#F78C6C;">3600</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">refresh_token</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">xxxxxxx</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>客户端就可以在后端取到 <code>access_token</code>,在这段 json 中，还返回了一个 <code>refresh_token</code>，这个 <code>refresh_token</code> 表示用于访问下一次的更新令牌，<code>refresh_token</code> 的时效性比 <code>access_token</code> 长，当 <code>access_token</code> 过期时，可以使用 <code>refresh_token</code> 换取新的 <code>access_token</code>。</p><p>详情请见 <a href="./oAuth2-github.html">github 授权登录</a></p><h3 id="简化模式" tabindex="-1">简化模式 <a class="header-anchor" href="#简化模式" aria-label="Permalink to &quot;简化模式&quot;">​</a></h3><p>简化模式主要针对没有后端的纯前端应用，在这种情况下，因为没有后端，所以就不能采用授权码模式的这种流程了，必须要把 access_token 存在前端。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+----------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Resource </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  Owner   </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+----------+</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">^</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">     (B)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+----|-----+</span><span style="color:#A6ACCD;">          Client Identifier     </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">-+----</span><span style="color:#A6ACCD;">(A)</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Redirection URI </span><span style="color:#89DDFF;">---&gt;|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  User</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Authorization </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  Agent  </span><span style="color:#89DDFF;">-|----</span><span style="color:#A6ACCD;">(B)</span><span style="color:#89DDFF;">--</span><span style="color:#A6ACCD;"> User authenticates </span><span style="color:#89DDFF;">--&gt;|</span><span style="color:#A6ACCD;">     Server    </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|&lt;---</span><span style="color:#A6ACCD;">(C)</span><span style="color:#89DDFF;">---</span><span style="color:#A6ACCD;"> Redirection URI </span><span style="color:#89DDFF;">----&lt;|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;font-style:italic;">with</span><span style="color:#A6ACCD;"> Access Token     </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> Fragment</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|----</span><span style="color:#A6ACCD;">(D)</span><span style="color:#89DDFF;">---</span><span style="color:#A6ACCD;"> Redirection URI </span><span style="color:#89DDFF;">----&gt;|</span><span style="color:#A6ACCD;">   Web</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">Hosted  </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          without Fragment      </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">     Client    </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    Resource   </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">     (F)  </span><span style="color:#89DDFF;">|&lt;---</span><span style="color:#A6ACCD;">(E)</span><span style="color:#89DDFF;">-------</span><span style="color:#A6ACCD;"> Script </span><span style="color:#89DDFF;">---------&lt;|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+-|--------+</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">  (A)  (G) Access Token</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span><span style="color:#89DDFF;">^</span><span style="color:#A6ACCD;">    v</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+---------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  Client </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+---------+</span></span>
<span class="line"></span></code></pre></div><p>主要是 B 这个步骤，页面跳转到 github 网站，用户同意给予客户端授权。github 就会把令牌作为 URL 参数，跳转回到 redirect_uri 的这个回调地址。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">回调地址#token</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">xxxxxx</span></span>
<span class="line"></span></code></pre></div><p>注意，令牌的位置是 URL 锚点（fragment），而不是查询字符串（querystring），这是因为 OAuth 2.0 允许跳转网址是 HTTP 协议，因此存在&quot;中间人攻击&quot;的风险，而浏览器跳转时，锚点不会发到服务器，就减少了泄漏令牌的风险。</p><h3 id="密码模式" tabindex="-1">密码模式 <a class="header-anchor" href="#密码模式" aria-label="Permalink to &quot;密码模式&quot;">​</a></h3><p>如果你高度信任某个应用，RFC 6749 也允许用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为&quot;密码式&quot;（password）。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">+----------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Resource </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">  Owner   </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">          </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+----------+</span></span>
<span class="line"><span style="color:#A6ACCD;">      v</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    Resource Owner</span></span>
<span class="line"><span style="color:#A6ACCD;">     (A) Password Credentials</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;">      v</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+---------+</span><span style="color:#A6ACCD;">                                  </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|&gt;--</span><span style="color:#A6ACCD;">(B)</span><span style="color:#89DDFF;">----</span><span style="color:#A6ACCD;"> Resource Owner </span><span style="color:#89DDFF;">-------&gt;|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         Password Credentials     </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Authorization </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Client  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">     Server    </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|&lt;--</span><span style="color:#A6ACCD;">(C)</span><span style="color:#89DDFF;">----</span><span style="color:#A6ACCD;"> Access Token </span><span style="color:#89DDFF;">---------&lt;|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">    (w</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> Optional Refresh Token)   </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+---------+</span><span style="color:#A6ACCD;">                                  </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        Figure </span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">: Resource Owner Password Credentials Flow</span></span>
<span class="line"></span></code></pre></div><p>密码模式就是用户向客户端提供自己的账号和密码，客户端使用这些信息去向我们的服务提供商去索要一个授权。</p><h3 id="客户端模式" tabindex="-1">客户端模式 <a class="header-anchor" href="#客户端模式" aria-label="Permalink to &quot;客户端模式&quot;">​</a></h3><p>客户端以自己的名义，而不是用户的名义，向“服务提供商”进行认证，如微信公众号以此 access_token 来拉取所有已关注用户的信息，docker 到 dockerhub 拉取镜像等。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+---------+</span><span style="color:#A6ACCD;">                                  </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|&gt;--</span><span style="color:#A6ACCD;">(A)</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> Client Authentication </span><span style="color:#89DDFF;">---&gt;|</span><span style="color:#A6ACCD;"> Authorization </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> Client  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">     Server    </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|&lt;--</span><span style="color:#A6ACCD;">(B)</span><span style="color:#89DDFF;">----</span><span style="color:#A6ACCD;"> Access Token </span><span style="color:#89DDFF;">---------&lt;|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">         </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">                                  </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;">               </span><span style="color:#89DDFF;">|</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+---------+</span><span style="color:#A6ACCD;">                                  </span><span style="color:#89DDFF;">+---------------+</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">                 Figure </span><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">: Client Credentials Flow</span></span>
<span class="line"></span></code></pre></div><p>客户端模式，顾名思义就是指客户端以自己的名义而不是用户的名义去向服务的提供商去做一个认证，严格来说，这种模式并不是 oAuth 框架要解决的问题，在这种客户端模式下呢，它是直接通过客户端的密钥和 id 去获取一个 access_token 的，不需要用户去参与。</p><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><ul><li><a href="http://www.ruanyifeng.com/blog/2019/04/oauth_design.html" target="_blank" rel="noreferrer">阮一峰 OAuth 2.0 的一个简单解释</a></li><li><a href="http://www.ruanyifeng.com/blog/2019/04/oauth_design.html" target="_blank" rel="noreferrer">阮一峰 OAuth 2.0 的四种方式</a></li><li><a href="https://juejin.im/post/5dd34a47f265da0c091575e5" target="_blank" rel="noreferrer">理解 OAuth2 协议</a></li></ul>`,46),e=[o];function t(c,r,D,y,C,A){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
