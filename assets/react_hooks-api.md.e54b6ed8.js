import{_ as e,o,c as t,N as a}from"./chunks/framework.208f6f3f.js";const h=JSON.parse('{"title":"探索 hooks API","description":"","frontmatter":{"title":"探索 hooks API","date":"2022-03-23T09:58:29.000Z","sidebar":"auto","tags":["React"],"categories":"React"},"headers":[],"relativePath":"react/hooks-api.md","lastUpdated":1682518848000}'),c={name:"react/hooks-api.md"},n=a('<h2 id="useeffect-依赖执行关系" tabindex="-1">useEffect 依赖执行关系 <a class="header-anchor" href="#useeffect-依赖执行关系" aria-label="Permalink to &quot;useEffect 依赖执行关系&quot;">​</a></h2><p><code>useEffect</code> 第二个参数[]如何影响 fn 的执行？换句话说，它的第二个参数是如何影响 <code>fiber</code> 创建 <code>Passive Effect</code> 的？</p><ol><li>不包含第二个参数 <code>useEffect(() =&gt; {})</code>，<code>Mount</code> &amp; <code>Update</code> 时，每次 <code>render</code> 时都会创建一个 <code>Passive Effect</code>;</li><li>包含一个空数组[]作为依赖项 <code>useEffect(() =&gt; {}, [])</code>，它会在 <code>mount</code> 时，创建 <code>Passive Effect</code></li><li>包含一个依赖项<code>[dep]</code>，它会在 mount 时，dep 依赖项变化时，创建 Passive Effect</li></ol><h2 id="fn-和-componentdidmount-的执行时机分别是什么" tabindex="-1">fn 和 componentDidMount 的执行时机分别是什么？ <a class="header-anchor" href="#fn-和-componentdidmount-的执行时机分别是什么" aria-label="Permalink to &quot;fn 和 componentDidMount 的执行时机分别是什么？&quot;">​</a></h2><p><strong>过程</strong></p><p>render 阶段到 commit 阶段，传递的时包含不同 fiber 节点的 effect 的链表，commit 阶段时将状态变化（Effect）渲染在视图中</p><ul><li>渲染视图前，beforeMutation 阶段</li><li>渲染视图中，mutation 阶段，Placement 会执行 appendChild，DOM 节点插入到视图中</li><li>渲染视图后，layout 阶段，调用 componentDidMount</li></ul><ol><li>useEffect 时 commit 完成后异步调用</li><li>componentDidMount 是 commit 阶段完成视图更新（mutation 阶段）后，在 layout 阶段同步调用</li><li>useLayoutEffect 和 componentDidMount 调用时机一致，也是在 layout 阶段同步调用</li></ol><p><img src="https://alvin-cdn.oss-cn-shenzhen.aliyuncs.com/images/hooks-api.png" alt=""></p><h2 id="相关文章" tabindex="-1">相关文章 <a class="header-anchor" href="#相关文章" aria-label="Permalink to &quot;相关文章&quot;">​</a></h2><ul><li><a href="https://www.yuque.com/lxylona/note/tlc8hz#RnPvS" target="_blank" rel="noreferrer">React Hooks: 深入剖析 useMemo 和 useEffect</a></li></ul>',11),i=[n];function s(d,l,r,f,u,p){return o(),t("div",null,i)}const _=e(c,[["render",s]]);export{h as __pageData,_ as default};
