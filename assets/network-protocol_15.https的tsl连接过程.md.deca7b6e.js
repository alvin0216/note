import{_ as e,o as l,c as t,Q as o}from"./chunks/framework.2c915ec2.js";const m=JSON.parse('{"title":"tsl 握手的过程（1.2）","description":"","frontmatter":{"title":"tsl 握手的过程（1.2）","date":"2018-09-28T13:00:28.000Z","sidebar":"auto","tags":["https"],"categories":["网络协议"]},"headers":[],"relativePath":"network-protocol/15.https的tsl连接过程.md","lastUpdated":1702473622000}'),s={name:"network-protocol/15.https的tsl连接过程.md"},i=o('<blockquote><p>最终是使用会话密钥的方式进行对称加密的密文传输，所以拿到服务器的公钥加密随机数，让两端生成绘话密钥尤为重要！</p></blockquote><p><img src="https://alvin-cdn.oss-cn-shenzhen.aliyuncs.com/images/tsl12-0.png" alt=""></p><ul><li>web <code>- client hellow -&gt;</code> server <ul><li>客户端：我生成一个随机数 A，还有我支持的加密套件有哪些给你知道，当前我用的是 tsl 1.2 版本</li></ul></li><li>web <code>&lt;- server hello -</code> server <ul><li>服务端：我也生成一个随机数 B，我挑了一个加密套件 咱们使用这个套件进行加密</li></ul></li><li>web <code>&lt;- server key exchange -</code> server <ul><li>服务端：我给你发个证书，里面有我的公钥，你可以用公钥加密，黑客破解不了。</li></ul></li><li>web <code>&lt;- server hello done -</code> server <ul><li>服务端：通知一下你 我完成啦</li></ul></li><li>web <code>- client key exchange -&gt;</code> server <ul><li>客户端：检查了一下你的证书是有效的，拿到了公钥。我在生成了一个随机数 C，用你给我的公钥加密 发给你了</li></ul></li><li>服务端：我拿到了第三个随机数，我们使用同样的加密方式生成我们的会话密钥。以后咱们使用这个密钥进行通信吧</li><li>客户端：好的，会话密钥只应用于当前会话，咱们传输很安全了。</li></ul>',3),c=[i];function r(a,_,n,d,p,u){return l(),t("div",null,c)}const v=e(s,[["render",r]]);export{m as __pageData,v as default};
