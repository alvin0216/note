(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{618:function(s,a,t){"use strict";t.r(a);var e=t(6),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("Tabs",{attrs:{type:"border-card"}},[t("Tab",{attrs:{label:"linux 命令"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" -i:4040 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 4040 端口占用情况")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" pid "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 释放进程")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其他")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换 bash 与 zsh")]),s._v("\nchsh -s /bin/bash\nchsh -s /bin/zsh\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取系统时间 2021-07-22 09:23:33")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+%Y-%m-%d %H:%M:%S"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${time}")]),s._v('"')]),s._v("\n")])])])]),s._v(" "),t("Tab",{attrs:{label:"配置 bash 别名"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" ~/.bash_profile\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("dev")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'npm run dev'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'npm run start'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ip")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"ifconfig | grep -oE 'inet.*netmask' | grep -oE '(\\d+\\.){3}\\d+' | sed -n 2p\"")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("taobao")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo --registry=https://registry.npm.taobao.org"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出淘宝镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# h 也即 help 的意思")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("h")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'\necho alvin 的帮助文档\n\necho \\\\n\necho scp 命令\necho 拷贝文件目录到服务器 scp -r \\<filepath\\> \\<remote:filePath\\>\necho 拷贝文件到服务器 scp \\<filepath\\> \\<remote:filePath\\>\necho demo: scp /Users/guosw/Desktop/a.js guosw:/code/a.js\necho 备注：拷贝服务端到本地 只需要调换 filePath 即可\necho \\\\n\n\necho linux 命令\necho 关闭端口占用 1. lsof -i:端口号 2. kill -9 PID\necho 查看某个进程 ps | grep -i mysql\necho 压缩解压\necho "  压缩 test文件夹为 test.gz:  tar zcvf ./test.gz ./test"\necho "  解压 test.gz 到当前目录:  tar zxvf test.gz"\n\'')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改后")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" .bash_profile\n")])])])]),s._v(" "),t("Tab",{attrs:{label:"homebrew"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\n/usr/bin/ruby -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check")]),s._v("\nbrew -v\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装卸载软件")]),s._v("\nbrew "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("formula"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装指定软件")]),s._v("\nbrew uninstall "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("formula "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卸载指定软件")]),s._v("\nbrew list "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有的已安装的软件")]),s._v("\nbrew search text "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#搜索本地远程仓库的软件，已安装会显示绿色的勾")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 升级软件相关")]),s._v("\nbrew update "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自动升级homebrew")]),s._v("\nbrew outdated "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检测已经过时的软件")]),s._v("\nbrew upgrade "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 升级所有已过时的软件，即列出的以过时软件")]),s._v("\nbrew upgrade "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("formula"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 升级指定的软件")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清理相关 homebrew再 升级软件时候不会清理相关的旧版本，在软件升级后我们可以使用如下命令清理")]),s._v("\nbrew cleanup -n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出需要清理的内容")]),s._v("\nbrew cleanup "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("formula"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清理指定的软件过时包")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看源")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("brew --repo"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote -v\n")])])]),t("p",[s._v("更换国内源")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("/usr/bin/ruby -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://raw.githubusercontent.com/rgf456/HomebrewInstall/master/install.rb"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n")])])])]),s._v(" "),t("Tab",{attrs:{label:"autojump"}},[t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("stat "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查看权重")]),s._v("\n\n改变权重值：\nj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("权重"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 增加")]),s._v("\nj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("权重"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 减少")]),s._v("\n\nj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("purge "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 去除不存在的路径")]),s._v("\n\njco c "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在文件管理器中打开一个子目录")]),s._v("\n")])])])])],1),s._v(" "),t("p",[s._v("Sed 主要用来自动编辑一个或多个文件、简化对文件的反复操作、编写转换程序等.")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.runoob.com/linux/linux-comm-sed.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Linux sed 命令"),t("OutboundLink")],1)])],1)}),[],!1,null,null,null);a.default=n.exports}}]);