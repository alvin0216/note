(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{606:function(t,l,i){"use strict";i.r(l);var o=i(7),r=Object(o.a)({},(function(){var t=this,l=t.$createElement,i=t._self._c||l;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h2",{attrs:{id:"访问网址"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#访问网址"}},[t._v("#")]),t._v(" 访问网址")]),t._v(" "),i("ul",[i("li",[t._v("https://alvin.run")]),t._v(" "),i("li",[t._v("https://alvin0216.github.io/note/")])]),t._v(" "),i("h2",{attrs:{id:"字符串"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/字符串/最长不含重复字符的子字符串.html"}},[t._v("最长不含重复字符的子字符串")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/字符串/反转字符串II.html"}},[t._v("反转字符串 II")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/字符串/字符串的排列.html"}},[t._v("字符串的排列")])],1)]),t._v(" "),i("h2",{attrs:{id:"数组"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/数组/两数之和.html"}},[t._v("两数之和")])],1)]),t._v(" "),i("h2",{attrs:{id:"链表"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/链表/移除链表元素.html"}},[t._v("移除链表元素")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/链表/删除链表的倒数第n个结点.html"}},[t._v("删除链表的倒数第 n 个结点")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/链表/反转链表.html"}},[t._v("反转链表")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/链表/环形链表II.html"}},[t._v("环形链表 II")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/链表/k个一组翻转链表.html"}},[t._v("k 个一组翻转链表")])],1)]),t._v(" "),i("h2",{attrs:{id:"双指针"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#双指针"}},[t._v("#")]),t._v(" 双指针")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/双指针/三数之和.html"}},[t._v("三数之和")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/双指针/接雨水.html"}},[t._v("接雨水")])],1)]),t._v(" "),i("h2",{attrs:{id:"二叉树"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" 二叉树")]),t._v(" "),i("ul",[i("li",[t._v("遍历方式\n"),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/二叉树的遍历方式.html#二叉树的前序遍历"}},[t._v("144. 二叉树的前序遍历")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/二叉树的遍历方式.html#二叉树的后序遍历"}},[t._v("145. 二叉树的后序遍历")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/二叉树的遍历方式.html#二叉树的中序遍历"}},[t._v("94. 二叉树的中序遍历")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/二叉树的遍历方式.html#二叉树的层序遍历"}},[t._v("102. 二叉树的层序遍历")])],1)])]),t._v(" "),i("li",[t._v("二叉树的属性\n"),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/二叉树的属性.html#对称二叉树"}},[t._v("101. 对称二叉树")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/二叉树的属性.html#二叉树的最大深度"}},[t._v("104. 二叉树的最大深度")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/二叉树的属性.html#二叉树的最小深度"}},[t._v("111. 二叉树的最小深度")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/二叉树的属性.html#平衡二叉树"}},[t._v("110. 平衡二叉树")])],1)])]),t._v(" "),i("li",[t._v("二叉树的修改与构造\n"),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/二叉树/翻转二叉树.html#翻转二叉树"}},[t._v("226. 翻转二叉树")])],1)])])]),t._v(" "),i("h2",{attrs:{id:"动态规划"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[t._v("#")]),t._v(" 动态规划")]),t._v(" "),i("ul",[i("li",[i("p",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/动态规划理论基础.html"}},[t._v("动态规划理论基础")])],1)]),t._v(" "),i("li",[i("p",[t._v("基础入门")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/爬楼梯.html#爬楼梯"}},[t._v("爬楼梯")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/爬楼梯.html#使用最小花费爬楼梯"}},[t._v("使用最小花费爬楼梯")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/不同路径.html"}},[t._v("不同路径")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/不同路径.html#不同路径-ii"}},[t._v("不同路径 II")])],1)])]),t._v(" "),i("li",[i("p",[t._v("打家劫舍")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/打家劫舍系列.html"}},[t._v("打家劫舍 I")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/打家劫舍系列.html#打家劫舍-ii"}},[t._v("打家劫舍 II")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/打家劫舍系列.html#打家劫舍-iii"}},[t._v("打家劫舍 III")])],1)])]),t._v(" "),i("li",[i("p",[t._v("买卖股票的最佳时机")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/买卖股票的最佳时机.html"}},[t._v("买卖股票的最佳时机")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/买卖股票的最佳时机.html#买卖股票的最佳时机-ii"}},[t._v("买卖股票的最佳时机 II")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/买卖股票的最佳时机.html#买卖股票的最佳时机-iii"}},[t._v("买卖股票的最佳时机 III")])],1)])]),t._v(" "),i("li",[i("p",[t._v("子序列问题")]),t._v(" "),i("ul",[i("li",[t._v("不连续\n"),i("ul",[i("li",[t._v("最长上升子序列")]),t._v(" "),i("li",[t._v("最长公共子序列")]),t._v(" "),i("li",[t._v("不想交的线")])])]),t._v(" "),i("li",[t._v("连续\n"),i("ul",[i("li",[t._v("最长连续递增序列")]),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/动态规划/最长重复子数组.html"}},[t._v("最长重复子数组")])],1),t._v(" "),i("li",[t._v("最大子序和")])])]),t._v(" "),i("li",[t._v("编辑距离\n"),i("ul",[i("li",[t._v("判断子序列")]),t._v(" "),i("li",[t._v("不同的子序列")]),t._v(" "),i("li",[t._v("两个字符串的删除操作")]),t._v(" "),i("li",[t._v("编辑距离")])])]),t._v(" "),i("li",[t._v("回文\n"),i("ul",[i("li",[t._v("回文子串")]),t._v(" "),i("li",[t._v("最长回文序列")])])])])]),t._v(" "),i("li",[i("p",[t._v("背包问题")])])]),t._v(" "),i("h2",{attrs:{id:"回溯算法"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#回溯算法"}},[t._v("#")]),t._v(" 回溯算法")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/总结.html"}},[t._v("总结")])],1),t._v(" "),i("li",[t._v("排列\n"),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/全排列.html"}},[t._v("全排列")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/全排列II.html"}},[t._v("全排列 II")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/字符串的排列.html"}},[t._v("字符串的排列")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/字母大小写全排列.html"}},[t._v("字母大小写全排列")])],1)])]),t._v(" "),i("li",[t._v("子集\n"),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/子集.html"}},[t._v("子集")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/子集II.html"}},[t._v("子集 II")])],1)])]),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/组合总和.html"}},[t._v("组合总和")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/分割回文串.html"}},[t._v("分割回文串")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/回溯/N皇后.html"}},[t._v("N 皇后")])],1)]),t._v(" "),i("h2",{attrs:{id:"dfs-遍历"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#dfs-遍历"}},[t._v("#")]),t._v(" DFS 遍历")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/algorithm/深度遍历/岛屿数量.html"}},[t._v("岛屿数量")])],1),t._v(" "),i("li",[t._v("岛屿的周长")]),t._v(" "),i("li",[t._v("岛屿的最大面积")])])])}),[],!1,null,null,null);l.default=r.exports}}]);