(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{683:function(e,o,_){"use strict";_.r(o);var v=_(7),n=Object(v.a)({},(function(){var e=this,o=e.$createElement,_=e._self._c||o;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("ol",[_("li",[_("code",[e._v("iframe")]),e._v(" 实现\n"),_("ul",[_("li",[e._v("全局变量隔离，如 "),_("code",[e._v("setTimeout、location、react")]),e._v(" 不同版本隔离")]),e._v(" "),_("li",[e._v("路由隔离，应用可以实现独立路由，也可以共享全局路由")]),e._v(" "),_("li",[e._v("多实例，可以同时存在多个独立的微应用同时运行")])])]),e._v(" "),_("li",[e._v("快照\n"),_("ul",[_("li",[e._v("在不支持代理的浏览器中，我们可以通过 "),_("code",[e._v("diff")]),e._v(" 的方式实习沙箱。在应用运行的时候保存一个快照 "),_("code",[e._v("window")]),e._v(" 对象，将当前 "),_("code",[e._v("window")]),e._v(" 对象的全部属性都复制到快照对象上，子应用卸载的时候将 "),_("code",[e._v("window")]),e._v(" 对象修改做个 "),_("code",[e._v("diff")]),e._v("，将不同的属性用个 modifyMap 保存起来，再次挂载的时候再加上这些修改的属性。")])])]),e._v(" "),_("li",[e._v("基于代理 "),_("code",[e._v("Proxy")]),e._v(" 实现单实例沙箱\n"),_("ul",[_("li",[e._v("在 "),_("code",[e._v("ES6")]),e._v(" 当中，我们可以通过代理("),_("code",[e._v("Proxy")]),e._v(")实现对象的劫持。基本实录也是通过 "),_("code",[e._v("window")]),e._v(" 对象的修改进行记录，在卸载时删除这些记录，在应用再次激活时恢复这些记录，来达到模拟沙箱环境的目的。")])])])]),e._v(" "),_("hr"),e._v(" "),_("p",[_("a",{attrs:{href:"https://juejin.cn/post/6981756262304186405",target:"_blank",rel:"noopener noreferrer"}},[e._v("微前端 qiankun 沙箱源码解读"),_("OutboundLink")],1)])])}),[],!1,null,null,null);o.default=n.exports}}]);