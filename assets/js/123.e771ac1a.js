(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{714:function(t,e,r){"use strict";r.r(e);var s=r(7),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("ol",[r("li",[t._v("知道 "),r("code",[t._v("proxy")]),t._v(" 吗")]),t._v(" "),r("li",[t._v("为什么 "),r("code",[t._v("vue")]),t._v(" 用 "),r("code",[t._v("proxy")]),t._v(" 取代 "),r("code",[t._v("defineProperty")])])]),t._v(" "),r("h2",{attrs:{id:"defineproperty-的缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#defineproperty-的缺点"}},[t._v("#")]),t._v(" defineProperty 的缺点")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v("'age'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),r("p",[t._v("上面的使用中，我们只监听了一个属性的变化.，但是在实际情况中，我们通常需要一次监听多个属性的变化。")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("defineProperty")]),t._v(" 无法对新增的属性进行劫持。\n"),r("ul",[r("li",[t._v("vue2 的话重写了数组方法才可以的。如果需要对新属性监听，可以通过 "),r("code",[t._v("$set")])])])]),t._v(" "),r("li",[r("code",[t._v("defineProperty")]),t._v(" 一次只能对一个属性进行监听，需要遍历来对所有属性监听。深度监听一个对象性能开销大（递归）")])]),t._v(" "),r("p",[r("code",[t._v("Object.definePorperty()")]),t._v(" 进行数据监听是比较麻烦的，需要大量的手动处理。这也是为什么在 "),r("code",[t._v("Vue3.0")]),t._v(" 中尤雨溪转而采用 "),r("code",[t._v("Proxy")]),t._v("。")]),t._v(" "),r("h2",{attrs:{id:"proxy-支持-13-种拦截操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proxy-支持-13-种拦截操作"}},[t._v("#")]),t._v(" Proxy 支持 13 种拦截操作")]),t._v(" "),r("p",[t._v("除了 get 和 set 来拦截读取和赋值操作之外，Proxy 还支持对其他多种行为的拦截。下面是一个简单介绍，想要深入了解的可以去 MDN 上看看。")]),t._v(" "),r("ol",[r("li",[t._v("get(target, propKey, receiver)：拦截对象属性的读取，比如 proxy.foo 和 proxy['foo']。")]),t._v(" "),r("li",[t._v("set(target, propKey, value, receiver)：拦截对象属性的设置，比如 proxy.foo = v 或 proxy['foo'] = v，返回一个布尔值。")]),t._v(" "),r("li",[t._v("has(target, propKey)：拦截 propKey in proxy 的操作，返回一个布尔值。")]),t._v(" "),r("li",[t._v("deleteProperty(target, propKey)：拦截 delete proxy[propKey]的操作，返回一个布尔值。")]),t._v(" "),r("li",[t._v("ownKeys(target)：拦截 Object.getOwnPropertyNames(proxy)、Object.getOwnPropertySymbols(proxy)、Object.keys(proxy)、for...in 循环，返回一个数组。该方法返回目标对象所有自身的属性的属性名，而 Object.keys()的返回结果仅包括目标对象自身的可遍历属性。")]),t._v(" "),r("li",[t._v("getOwnPropertyDescriptor(target, propKey)：拦截 Object.getOwnPropertyDescriptor(proxy, propKey)，返回属性的描述对象。")]),t._v(" "),r("li",[t._v("defineProperty(target, propKey, propDesc)：拦截 Object.defineProperty(proxy, propKey, propDesc）、Object.defineProperties(proxy, propDescs)，返回一个布尔值。")]),t._v(" "),r("li",[t._v("preventExtensions(target)：拦截 Object.preventExtensions(proxy)，返回一个布尔值。")]),t._v(" "),r("li",[t._v("getPrototypeOf(target)：拦截 Object.getPrototypeOf(proxy)，返回一个对象。")]),t._v(" "),r("li",[t._v("isExtensible(target)：拦截 Object.isExtensible(proxy)，返回一个布尔值。")]),t._v(" "),r("li",[t._v("setPrototypeOf(target, proto)：拦截 Object.setPrototypeOf(proxy, proto)，返回一个布尔值。如果目标对象是函数，那么还有两种额外操作可以拦截。")]),t._v(" "),r("li",[t._v("apply(target, object, args)：拦截 Proxy 实例作为函数调用的操作，比如 proxy(...args)、proxy.call(object, ...args)、proxy.apply(...)。")]),t._v(" "),r("li",[t._v("construct(target, args)：拦截 Proxy 实例作为构造函数调用的操作，比如 new proxy(...args)。")])])])}),[],!1,null,null,null);e.default=o.exports}}]);