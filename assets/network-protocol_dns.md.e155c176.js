import{_ as o,o as t,c as e,Q as a}from"./chunks/framework.20999013.js";const h=JSON.parse('{"title":"DNS 解析","description":"","frontmatter":{"title":"DNS 解析","date":"2018-09-28T17:00:28.000Z","sidebar":"auto","tags":["dns"],"categories":["网络协议"]},"headers":[],"relativePath":"network-protocol/dns.md","lastUpdated":1717399453000}'),s={name:"network-protocol/dns.md"},r=a('<p><img src="https://alvin-cdn.oss-cn-shenzhen.aliyuncs.com/images/dns.png" alt=""></p><h2 id="域名结构" tabindex="-1">域名结构 <a class="header-anchor" href="#域名结构" aria-label="Permalink to &quot;域名结构&quot;">​</a></h2><p>就以 <code>mail.baidu.com</code> 域名为例，域名最后一个.的右侧部分我们称之为顶级域名，倒数第二个.右侧部分称之为二级域名，以此类推，就会有三级域名，四级域名等等。</p><p>在 <code>mail.baidu.com</code> 的域名中，<code>com</code> 成为顶级域名，<code>baidu.com</code> 称为二级域名，<code>mail.baidu.com</code> 称为三级域名。</p><p>域名由两个或两个以上的词组成，常见域名为二级域名+顶级域名组成，所以一般我们会将域名分为顶级域名、二级域名，除此之外，还有国家代码顶级域名。</p><h2 id="查询顺序" tabindex="-1">查询顺序 <a class="header-anchor" href="#查询顺序" aria-label="Permalink to &quot;查询顺序&quot;">​</a></h2><p>现在我们来看看怎么去根据域名查询一台服务器的 IP 地址。</p><ol><li><strong>检查浏览器缓存</strong>中是否存在该域名与 IP 地址的映射关系，如果有则解析结束，没有则继续</li><li>到系统本地查找映射关系，一般在 <strong>hosts 文件</strong>中，如果有则解析结束，否则继续</li><li>到<strong>本地域名服务器</strong>去查询，有则结束，否则继续</li><li><strong>本地域名服务器查询根域名服务器</strong>，该过程并不会返回映射关系，只会告诉你去下级服务器(顶级域名服务器)查询</li><li><strong>本地域名服务器查询顶级域名服务器</strong>(即 com 服务器)，同样不会返回映射关系，只会引导你去二级域名服务器查询</li><li><strong>本地域名服务器查询二级域名服务器</strong>(即 <code>baidu.com</code> 服务器)，引导去三级域名服务器查询</li><li><strong>本地域名服务器查询三级域名服务器</strong>(即 mail.baidu.com 服务器)，此时已经是最后一级了，如果有则返回映射关系，则本地域名服务器加入自身的映射表中，方便下次查询或其他用户查找，同时返回给该用户的计算机，没有找到则网页报错</li></ol><ul><li><a href="https://juejin.cn/post/6909041150728863752" target="_blank" rel="noreferrer">浏览器之 DNS 解析过程详解</a></li></ul>',9),n=[r];function i(c,l,d,p,_,m){return t(),e("div",null,n)}const u=o(s,[["render",i]]);export{h as __pageData,u as default};
