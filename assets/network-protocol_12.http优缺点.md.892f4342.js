import{_ as t,o as e,c as a,Q as o}from"./chunks/framework.2c915ec2.js";const P=JSON.parse('{"title":"简要概括一下 HTTP 的优缺点?","description":"","frontmatter":{"title":"简要概括一下 HTTP 的优缺点?","date":"2018-09-17T13:00:28.000Z","sidebar":"auto","tags":["http"],"categories":["网络协议"]},"headers":[],"relativePath":"network-protocol/12.http优缺点.md","lastUpdated":1717165205000}'),i={name:"network-protocol/12.http优缺点.md"},l=o('<h2 id="http-优点" tabindex="-1">HTTP 优点 <a class="header-anchor" href="#http-优点" aria-label="Permalink to &quot;HTTP 优点&quot;">​</a></h2><ol><li>灵活可扩展：不仅仅可以传输文本，还能传输图片、视频等任意数据，非常方便。</li><li>可靠传输：HTTP 基于 TCP/IP，因此把这一特性继承了下来。这属于 TCP 的特性，不具体介绍了。</li><li>请求-应答：也就是一发一收、有来有回，</li><li>无状态：这服务器没有状态差异，可以很容易地组成集群。</li></ol><h2 id="http-缺点" tabindex="-1">HTTP 缺点 <a class="header-anchor" href="#http-缺点" aria-label="Permalink to &quot;HTTP 缺点&quot;">​</a></h2><ol><li>无状态：无法记录请求的对象信息，为此 cookie 存在的意义。。</li><li>明文传输：容易被抓包，窃取、篡改、冒充。</li><li>队头阻塞问题：由 HTTP 基本的“请求 - 应答”模型所导致的，因为 HTTP 规定报文必须是“一发一收”，这就形成了一个先进先出的“串行”队列。这个问题将</li></ol><p>在如何解决 HTTP 的队头阻塞问题特殊讲解</p>',5),r=[l];function _(s,T,c,n,p,h){return e(),a("div",null,r)}const m=t(i,[["render",_]]);export{P as __pageData,m as default};
